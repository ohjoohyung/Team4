<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context 
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/security 
                           http://www.springframework.org/schema/security/spring-security.xsd">

	<security:http>
		<security:csrf disabled="true"/>
		<security:form-login username-parameter="user_email"
    						 password-parameter="user_pwd"
							 login-page="/login"
							 authentication-success-handler-ref="loginSuccessHandler"
							 authentication-failure-handler-ref="loginFailureHandler"/>
							 
		<security:logout 	logout-url="/logout"
							logout-success-url="/main"/>
	
		<security:intercept-url pattern="/profileEditAssociate" access="hasRole('ROLE_ASSOCIATE_USER')" />
		<security:intercept-url pattern="/main" access="hasAnyRole('ROLE_ASSOCIATE_USER','ROLE_REGULAR_USER')" />
		<security:intercept-url pattern="/myProfile*" access="hasAnyRole('ROLE_ASSOCIATE_USER','ROLE_REGULAR_USER')" />
		<security:intercept-url pattern="/my*" access="hasRole('ROLE_REGULAR_USER')" />
		<security:intercept-url pattern="/free*" access="hasRole('ROLE_REGULAR_USER')" />
		<security:intercept-url pattern="/routineBrd*" access="hasRole('ROLE_REGULAR_USER')" />
  		<security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
  		
	
		<security:session-management invalid-session-url="/login">
	        <security:concurrency-control max-sessions="1" expired-url="/login"/>
	        <!-- 
	        중복 로그인 방지. 만약 두번째 로그인을 막고 싶을 경우 error-if-maximum0exceeded="true"를 추가하여 
	        값이 true일 때 두번째 로그인을 막는다. -->
	    </security:session-management>
	</security:http>
	<security:authentication-manager>
		<security:authentication-provider>
			
		<security:jdbc-user-service data-source-ref="driverManagerDataSource"
	   								 users-by-username-query="SELECT user_email, user_pwd, enabled FROM User where user_email=? and user_grade='regular'" 
	   								 authorities-by-username-query="select u.user_email , r.ROLE_NAME  
	   								 								from User u join Role r on u.user_email = r.user_email
	   								 								where u.user_email=?" />
		<!-- 추가된 부분임 -->
		<security:password-encoder ref="bCryptPasswordEncoder"/>
		</security:authentication-provider>
	</security:authentication-manager>
	<bean id="loginSuccessHandler" class="kr.or.bodiary.interceptor.LoginSuccessHandler">
	    <property name="loginEmail" value="user_email"/>
	    <property name="defaultUrl" value="/main"/>
	    <property name="associateUrl" value="/profileEditAssociate"/>
	</bean>
	<bean id="loginFailureHandler" class="kr.or.bodiary.interceptor.LoginFailureHandler">
	    <property name="loginEmail" value="user_email"/>
	    <property name="loginPwd" value="user_pwd"/>
	    <property name="errormsgname" value="ERRORMSG"/>
	    <property name="defaultFailureUrl" value="/loginFail"/>
	</bean>
	<context:component-scan base-package="kr.or.bodiary.interceptor"/>
</beans>  


