<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.or.bodiary.user.dao.UserDao">
	<!-- 회원테이블의 모든 유저 리스트 가져오기 (동률) -->
	<select id="getUserList" resultType="kr.or.bodiary.user.dto.UserDto">
		select user.user_email,user_nickname,user_gender,user_reportedcount,enabled,user_grade,role_name,user_age,user_height,user_weight,user_grade
		from user 
		inner join role
		where user.user_email = role.user_email
	</select>

	<!-- 해당 유저의 권한을 수정하는 쿼리문 (동률) -->
	<update id="userRoleUpdate" parameterType="kr.or.bodiary.user.dto.UserDto">
		update role
		set role_name = #{role_name}
		where user_email = #{user_email}
	</update>
	
	<!--  해당 유저의 총 자유게시물 가져오기(동률) -->
	<select id="freeBrdCount" resultType="int">
		SELECT count(*) as totalcount		
		FROM freeboard
		WHERE user_email = #{user_email}
	</select>
	
	<!--  해당 유저의 총 루틴자랑 게시물 가져오기(동률) -->
	<select id="routineBrdCount" resultType="int">
		SELECT count(*) as totalcount		
		FROM routineboard
		WHERE user_email = #{user_email}
	</select>
	<select id="getUser" resultType="kr.or.bodiary.user.dto.UserDto">
		select *
		from User
		where user_email= #{user_email}
	</select>
	<select id="selectUserByGender" resultType="int">
      select count(user_gender)
      from User
      where user_gender = #{user_gender}
   </select>
   <select id="selectUserCount" resultType="int">
      select count(user_email)
      from User
   </select>
   <!-- 탈퇴한 회원수 -->
   <select id="deleteUserCount" resultType="int">
      select count(user_email)
      from User
      where user_deletedate is not null
   </select>
   <!-- 신고게시글수 -->
   <select id="countBodiary" resultType="int">
      select count(free_brd_seq)
      from diary   
   </select>
   
   <!-- 일일회원가입수 -->
   <select id="todayUser" resultType="int">
      select count(user_email)
      from user
      where user_insertdate=date_format(now(), '%Y-%m-%d')
   </select>
   <!-- updatingChart -->
   <select id="updatingChart" resultType="int">
      select count(user_email)
      from user
      where user_deletedate is null
   </select>
   <!-- monthlyCount -->
   <select id="monthlyCount0" resultType="int">
      select count(user_email)
      from user
      where user_insertdate=date_format(now(), '%Y-%m-%d')
   </select>
   <select id="monthlyCount1" resultType="int">
      select count(user_email)
      from user
      where user_insertdate=CURDATE() - INTERVAL 1 DAY;
   </select>
   <select id="monthlyCount2" resultType="int">
      select count(user_email)
      from user
      where user_insertdate=CURDATE() - INTERVAL 2 DAY;
   </select>
   <select id="monthlyCount3" resultType="int">
      select count(user_email)
      from user
      where user_insertdate=CURDATE() - INTERVAL 3 DAY;
   </select>
   <select id="monthlyCount4" resultType="int">
      select count(user_email)
      from user
      where user_insertdate=CURDATE() - INTERVAL 4 DAY;
   </select>
   <select id="monthlyCount5" resultType="int">
      select count(user_email)
      from user
      where user_insertdate=CURDATE() - INTERVAL 5 DAY;
   </select>
   <!-- 하루 남녀 -->
   <select id="dailyUser1" resultType="kr.or.bodiary.admin.dto.AdminDashDto">
      select distinct CURDATE() as userDate,
      (select count(if(user_gender='남' and user_insertdate<![CDATA[ <= ]]>CURDATE()  ,user_gender,null)) from user) as man,
      (select count(if(user_gender='여' and user_insertdate<![CDATA[ <= ]]>CURDATE()  ,user_gender,null)) from user) as woman
      from user
   </select>
   <select id="dailyUser2" resultType="kr.or.bodiary.admin.dto.AdminDashDto">
      select distinct CURDATE() - INTERVAL 1 DAY as userDate,
      (select count(if(user_gender='남' and user_insertdate<![CDATA[ <= ]]>CURDATE() - INTERVAL 1 DAY ,user_gender,null)) from user) as man,
      (select count(if(user_gender='여' and user_insertdate<![CDATA[ <= ]]>CURDATE() - INTERVAL 1 DAY ,user_gender,null)) from user) as woman
      from user
   </select>
   <select id="dailyUser3" resultType="kr.or.bodiary.admin.dto.AdminDashDto">
      select distinct CURDATE() - INTERVAL 2 DAY as userDate,
      (select count(if(user_gender='남' and user_insertdate<![CDATA[ <= ]]>CURDATE() - INTERVAL 2 DAY ,user_gender,null)) from user) as man,
      (select count(if(user_gender='여' and user_insertdate<![CDATA[ <= ]]>CURDATE() - INTERVAL 2 DAY ,user_gender,null)) from user) as woman
      from user
   </select>
   <select id="dailyUser4" resultType="kr.or.bodiary.admin.dto.AdminDashDto">
      select distinct CURDATE() - INTERVAL 3 DAY as userDate,
      (select count(if(user_gender='남' and user_insertdate<![CDATA[ <= ]]>CURDATE() - INTERVAL 3 DAY ,user_gender,null)) from user) as man,
      (select count(if(user_gender='여' and user_insertdate<![CDATA[ <= ]]>CURDATE() - INTERVAL 3 DAY ,user_gender,null)) from user) as woman
      from user
   </select>
   <select id="dailyUser5" resultType="kr.or.bodiary.admin.dto.AdminDashDto">
      select distinct CURDATE() - INTERVAL 4 DAY as userDate,
      (select count(if(user_gender='남' and user_insertdate<![CDATA[ <= ]]>CURDATE() - INTERVAL 4 DAY ,user_gender,null)) from user) as man,
      (select count(if(user_gender='여' and user_insertdate<![CDATA[ <= ]]>CURDATE() - INTERVAL 4 DAY ,user_gender,null)) from user) as woman
      from user
   </select>
   <select id="dailyUser6" resultType="kr.or.bodiary.admin.dto.AdminDashDto">
      select distinct CURDATE() - INTERVAL 5 DAY as userDate,
      (select count(if(user_gender='남' and user_insertdate<![CDATA[ <= ]]>CURDATE() - INTERVAL 5 DAY ,user_gender,null)) from user) as man,
      (select count(if(user_gender='여' and user_insertdate<![CDATA[ <= ]]>CURDATE() - INTERVAL 5 DAY ,user_gender,null)) from user) as woman
      from user
   </select>
   <select id="dailyUser7" resultType="kr.or.bodiary.admin.dto.AdminDashDto">
      select distinct CURDATE() - INTERVAL 6 DAY as userDate,
      (select count(if(user_gender='남' and user_insertdate<![CDATA[ <= ]]>CURDATE() - INTERVAL 6 DAY ,user_gender,null)) from user) as man,
      (select count(if(user_gender='여' and user_insertdate<![CDATA[ <= ]]>CURDATE() - INTERVAL 6 DAY ,user_gender,null)) from user) as woman
      from user
   </select>
   <!-- 회원가입 -->
	<insert id="insertUser">
		INSERT INTO User(
			user_email, user_pwd, user_nickname, user_gender, user_age , user_img, user_reportedcount, enabled, user_grade, user_insertdate,user_height, user_weight,user_snstype
			) 
		VALUES( #{user_email},#{user_pwd}, #{user_nickname} ,#{user_gender},#{user_age}, 'user.png', 0, 1, 'regular', date_format(now(), '%Y-%m-%d')

		<choose>
			<when test="user_pwd == 'naver'">
				,#{user_height}, #{user_weight},#{user_snstype}
			</when>
			<when test="user_pwd != 'naver'">
				,0, 0,#{user_snstype}
			</when>
		</choose>
		)
	</insert>
	<!-- 비밀번호 확인  -->
	<select id="selectPwd" resultType="String">
		select user_pwd
		from User
		where user_email= #{user_email}
	</select>
	<!-- 회원비번 수정 -->
	<update id="updatePwd">
		update User
		set user_pwd = #{user_pwd}
		where user_email = #{user_email}
	</update>
	<!-- 회원닉네임 수정 -->
	<update id="updateNick">
		update User
		set user_nickname = #{user_nickname}
		where user_email = #{user_email}
	</update>
	<!-- 회원정보 수정 -->
	<update id="updateUser">
		update User
		set user_age = #{user_age}, user_height=#{user_height}, user_weight=#{user_weight}, user_img=#{user_img}
		where user_email = #{user_email}
	</update>
	<!-- 회원권한 업데이트 -->
	<update id="updateRole">
		update Role
		set role_name='ROLE_REGULAR_USER'
		where user_email = #{user_email}
	</update>
	<!-- 휴면계정 전환 -->
	<update id="updateDormantAccount">
		update User
		set enabled=0
		where user_email=#{user_email}
	</update>
	<!-- 회원 탈퇴처리 후 grade 부여 -->
	<update id="updateWithdrawalUser">
		update User
		set user_grade = 'withdrawal', user_nickname = 'N', user_gender = 'N', enabled = 0, 
			user_age = 0, user_height = 0, user_weight = 0, user_img='N', user_deletedate = now()
		where user_email= #{user_email}
	</update>
	<!-- 회원 삭제 -->
	<delete id="deleteUser">
		delete User where user_email#{user_email}
	</delete>
	
	<!-- 회원가입시 이메일 체크 -->
	<select id="emailCheck" resultType="int">
		select count(*)
		from User
		where user_email=#{user_email}
	</select>
	
	
	<!-- ///////////////////////////////차트//////////////////////////////// -->
	
	<!-- 자신의 성별, 키에 해당하는 회원 평균 몸무게 조회 -->
	<select id="getAvgWeight" resultType="Integer">
		select avg(user_weight) from user where user_height=#{param1} and user_gender=#{param2}
	</select>
	
</mapper>