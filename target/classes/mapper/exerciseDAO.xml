<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.or.bodiary.exercise.dao.ExerciseDao">

	<select id="exerciseSearch" parameterType="kr.or.bodiary.exercise.dto.ExerciseDto" resultType="kr.or.bodiary.exercise.dto.ExerciseDto">
       select * from Exercise 
       where 1=1
       <if test="excs_name != null">
       AND excs_name  
          like concat('%', #{excs_name} , '%')
     </if>
     <if test="excs_kind != null">
       AND excs_kind =#{excs_kind}
     </if>
     <if test="excs_body_part != null">
       AND excs_body_part =#{excs_body_part}
     </if>
     <if test="excs_equipment != null">
       AND excs_equipment =#{excs_equipment}
     </if>
     <if test="excs_level != 0">
       AND excs_level =#{excs_level}
     </if>
       

    </select> 
    <select id="getExerciseListByName" parameterType="String" resultType="kr.or.bodiary.exercise.dto.ExerciseDto">
       select * from Exercise where excs_name  like concat('%', #{excs_name} , '%')
    </select> 
    <select id="getExercisecListByName" resultType="kr.or.bodiary.exercise.dto.ExerciseDto">
       select * from Exercise where excs_kind='C'
    </select>
    <select id="getExercisenListByName" resultType="kr.or.bodiary.exercise.dto.ExerciseDto">
       select * from Exercise where excs_kind='N'
    </select>
    <select id="exercisepartSearch" parameterType="String" resultType="kr.or.bodiary.exercise.dto.ExerciseDto">
       select * from Exercise where excs_body_part=#{excs_body_part}
    </select>
    <select id="exerciseEquiSearch" parameterType="String" resultType="kr.or.bodiary.exercise.dto.ExerciseDto">
       select * from Exercise where excs_equipment=#{excs_equipment}
    </select>
    
    <select id="exercisepartequiSearch" parameterType="hashmap" resultType="kr.or.bodiary.exercise.dto.ExerciseDto">
       select * from Exercise where excs_equipment=#{excs_equipment} and excs_body_part=#{excs_body_part}
    </select>
    
    <select id="exerciseadd" parameterType="int" resultType="kr.or.bodiary.exercise.dto.ExerciseDto">
       select * from Exercise where excs_seq=#{excs_seq}
    </select>
    <select id="getExercise" resultType="kr.or.bodiary.exercise.dto.ExerciseDto">
 	select * FROM exercise
 	</select>
 	
 	<select id="getExerciseBySeq" resultType="kr.or.bodiary.exercise.dto.ExerciseDto">
  	SELECT *
  	FROM exercise 
  	WHERE excs_seq=#{excs_seq}
  	</select>
  	<delete id="exerciseDelete">
  	delete
  	from exercise
  	where excs_seq=#{excs_seq}
  	</delete>
  	<update id="updateExercise" parameterType="kr.or.bodiary.exercise.dto.ExerciseDto">
    	UPDATE exercise 
    	SET excs_kind=#{excs_kind}, 
    		excs_name=#{excs_name}, 
    		excs_cal_per_minweight=#{excs_cal_per_minweight} , 
    		excs_body_part=#{excs_body_part},
    		excs_equipment=#{excs_equipment},
    		excs_description=#{excs_description},
    		excs_video_link=#{excs_video_link},
    		excs_level=#{excs_level}
    	WHERE excs_seq=#{excs_seq}
    </update>
    <insert id="insertExercise" parameterType="kr.or.bodiary.exercise.dto.ExerciseDto" useGeneratedKeys="true" keyProperty="excs_seq">
     	
     	INSERT INTO exercise(excs_seq, excs_kind, excs_name, excs_cal_per_minweight, excs_body_part, 
     	excs_equipment, excs_description , excs_video_link, excs_level) 
     	VALUES(#{excs_seq}, #{excs_kind}, #{excs_name}, #{excs_cal_per_minweight} , #{excs_body_part},#{excs_equipment},#{excs_description},#{excs_video_link},#{excs_level})
     </insert>
     
     <!-- ========================================================================== -->
    
     
    <!-- 루틴 장바구니 추가 -->
    <insert id="insertRoutineCart" parameterType="kr.or.bodiary.myBodiary.dto.RoutineJoinDto" useGeneratedKeys="true" keyProperty="routine_cart_seq">
       insert into routinecart (routine_cart_title, routine_cart_check)
       values (#{routine_cart_title}, 'I')
    </insert>
    
    <!-- 루틴 만들기 (운동 몇시간, 운동 몇세트 몇회) -->
    <insert id="insertRoutine" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="routine_seq">
       insert into routine (excs_seq, routine_exercise_hour, routine_set, routine_reps_per_set, routine_done_check)
       values
       <foreach collection="list" item="item" separator=",">
          (#{item.excs_seq}, #{item.routine_exercise_hour}, #{item.routine_set}, #{item.routine_reps_per_set}, 'N')
       </foreach> 
    </insert>
    
    <!-- 루틴 묶음 만들기 -->
    <insert id="insertRoutineBundle" parameterType="java.util.List">
       insert into routinebundle (routine_cart_seq, user_email, routine_seq)
       values
       <foreach collection="list" item="item" separator=",">
          (#{item.routine_cart_seq}, #{item.user_email}, #{item.routine_seq})
       </foreach>
    </insert>


    <!--  루틴 삭제하기 -->
   <update id="deleteRoutineCart">
      update routinecart
      set routine_cart_check = 'D' where routine_cart_seq = #{routine_cart_seq}
    </update>

   <!-- 루틴 상태 수정하기 -->
   <update id="updateRoutineCart">
      update routinecart
      set
      routine_cart_check = 'U' where routine_cart_seq=#{routine_cart_seq}
   </update>
    
   
</mapper>

 

 